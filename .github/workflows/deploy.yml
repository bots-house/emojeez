name: ðŸ’– Deploy emojeez ðŸ’˜

on:
  push:
    branches:
      - master
      - portainer-deploy # todo remove it 

jobs:
  push_then_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GCR_TOKEN }}

      - name: Build and push
        id: build_and_push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/emojeez:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          
      - name: Image digest
        run: echo ${{ steps.build_and_push.outputs.digest }}

      - name: Deploy Stack
        uses: bots-house/portainer-deploy-stack-action@main # TODO: replace with release
        with:
          # url of Poratainer instance
          portainer-url: ${{ secrets.CLUSTER_PORTAINER_URL }}

          # portainer auth
          portainer-username: ${{ secrets.CLUSTER_PORTAINER_USERNAME }}
          portainer-password: ${{ secrets.CLUSTER_PORTAINER_PASSWORD }}
          
          # internal portainer cluster id
          portainer-endpoint: 1
          
          # stack name
          stack-name: emojeez

          # docker stack file location
          stack-file: .github/stack/production.yml
          
          # vars to substitute in stack
          stack-vars: |
            DOMAIN: emoji.${{ secrets.CLUSTER_BASE_DOMAIN }}

          # grant access for specified teams
          teams: Microservices
